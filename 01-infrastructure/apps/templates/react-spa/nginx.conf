# ============================================================================
# NGINX Configuration for React SPA (Vite/CRA) with Supabase Integration
# ============================================================================
# Template Version: 2.0.0
# Optimized for: Raspberry Pi 5 ARM64 + Self-hosted Supabase
#
# Features:
# - Content Security Policy (CSP) configurable (dev/prod)
# - Cache strategy optimized for development
# - Gzip compression
# - Security headers
# - SPA routing support
# - Healthcheck endpoint
#
# IMPORTANT: Replace placeholders before deploying:
#   - {{SUPABASE_LOCAL_IP}}  : IP of Supabase server (e.g., 192.168.1.74)
#   - {{SUPABASE_LOCAL_HOST}}: Hostname (e.g., pi5.local)
#   - {{ENVIRONMENT}}        : "development" or "production"
# ============================================================================

server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # ========================================================================
    # GZIP COMPRESSION
    # ========================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/json
        application/javascript
        image/svg+xml;

    # ========================================================================
    # CACHE STRATEGY (Development-friendly)
    # ========================================================================
    # Static assets: 30 days cache with revalidation (NOT immutable)
    # This allows browsers to revalidate after Cmd+Shift+R
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Content-Type-Options "nosniff" always;

        # Ensure correct MIME types (fixes Vite/Tailwind CSS issues)
        types {
            text/css css;
            application/javascript js mjs;
            image/svg+xml svg svgz;
        }
    }

    # ========================================================================
    # SPA ROUTING (Fallback to index.html)
    # ========================================================================
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # ========================================================================
    # SECURITY HEADERS
    # ========================================================================

    # Content Security Policy (CSP)
    # ⚠️ IMPORTANT: Adjust based on your environment

    # DEVELOPMENT MODE (allows HTTP local connections to Supabase)
    # Uncomment this block for development with self-hosted Supabase
    add_header Content-Security-Policy "
        default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: https: http://{{SUPABASE_LOCAL_IP}}:* http://{{SUPABASE_LOCAL_HOST}}:*;
        connect-src 'self' http://{{SUPABASE_LOCAL_IP}}:* http://{{SUPABASE_LOCAL_HOST}}:* https:;
        img-src 'self' data: https: http://{{SUPABASE_LOCAL_IP}}:*;
        font-src 'self' data:;
    " always;

    # PRODUCTION MODE (HTTPS only)
    # Uncomment this block for production with Supabase Cloud
    # add_header Content-Security-Policy "
    #     default-src 'self';
    #     script-src 'self' 'unsafe-inline' 'unsafe-eval';
    #     style-src 'self' 'unsafe-inline';
    #     connect-src 'self' https://*.supabase.co https://*.supabase.in;
    #     img-src 'self' data: https:;
    #     font-src 'self' data:;
    # " always;

    # Other security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # ========================================================================
    # SECURITY: Disable access to hidden files
    # ========================================================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ========================================================================
    # HEALTHCHECK ENDPOINT
    # ========================================================================
    location /healthz {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # ========================================================================
    # ERROR PAGES (optional)
    # ========================================================================
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# ============================================================================
# CONFIGURATION NOTES
# ============================================================================
#
# 1. CSP (Content Security Policy)
#    - Development: Allows HTTP connections to local Supabase
#    - Production: Restricts to HTTPS only
#    - Replace {{SUPABASE_LOCAL_IP}} with your Pi IP (e.g., 192.168.1.74)
#    - Replace {{SUPABASE_LOCAL_HOST}} with your Pi hostname (e.g., pi5.local)
#
# 2. Cache Strategy
#    - Static assets: 30 days with must-revalidate (allows Cmd+Shift+R)
#    - index.html: No cache (always fresh)
#    - NOT using "immutable" to allow updates during development
#
# 3. MIME Types
#    - Explicitly defined for .css and .js to prevent Vite/Tailwind issues
#    - Fixes "MIME type mismatch" errors
#
# 4. Gzip Compression
#    - Enabled for text/css, application/javascript, etc.
#    - Reduces bandwidth usage by 70-80%
#
# 5. SPA Routing
#    - All 404s fall back to /index.html (React Router, Vue Router, etc.)
#
# ============================================================================
# TROUBLESHOOTING
# ============================================================================
#
# CSS not applied / Only 5kB CSS file
# ✅ Solution: Ensure tailwind.config.ts and postcss.config.js are copied
#              before Docker build (see CHANGELOG-AND-FIXES.md)
#
# "Refused to connect" CSP errors
# ✅ Solution: Use DEVELOPMENT CSP block with correct Supabase IP
#
# Cache too aggressive / Updates not visible
# ✅ Solution: Hard refresh (Cmd+Shift+R) or use no-cache for static assets
#
# Authentication blocked by CSP
# ✅ Solution: Add connect-src with Supabase URLs
#
# ============================================================================
