# ============================================================================
# NGINX Configuration for React SPA (Vite/CRA) with Supabase Integration
# ============================================================================
# Template Version: 2.1.0
# Optimized for: Raspberry Pi 5 ARM64 + Self-hosted Supabase
#
# Features:
# - Supabase API proxy (resolves Mixed Content HTTPS → HTTP issues)
# - Content Security Policy (CSP) configurable (dev/prod)
# - Cache strategy optimized for development
# - Gzip compression
# - Security headers
# - SPA routing support
# - Healthcheck endpoint
#
# IMPORTANT: Replace placeholders before deploying:
#   - {{SUPABASE_LOCAL_IP}}  : IP of Supabase server (e.g., 192.168.1.74)
#   - {{SUPABASE_LOCAL_HOST}}: Hostname (e.g., pi5.local)
#   - {{ENVIRONMENT}}        : "development" or "production"
#
# NEW in v2.1.0:
# - Added Supabase API proxy (/auth, /rest, /storage, /functions)
# - Resolves Mixed Content errors when using Cloudflare Tunnel (HTTPS frontend)
# - CSP updated to allow 'self' and https: for connect-src
# ============================================================================

server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # ========================================================================
    # GZIP COMPRESSION
    # ========================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/json
        application/javascript
        image/svg+xml;

    # ========================================================================
    # CACHE STRATEGY (Development-friendly)
    # ========================================================================
    # Static assets: 30 days cache with revalidation (NOT immutable)
    # This allows browsers to revalidate after Cmd+Shift+R
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Content-Type-Options "nosniff" always;

        # Ensure correct MIME types (fixes Vite/Tailwind CSS issues)
        types {
            text/css css;
            application/javascript js mjs;
            image/svg+xml svg svgz;
        }
    }

    # ========================================================================
    # SUPABASE API PROXY (Resolves Mixed Content HTTPS → HTTP)
    # ========================================================================
    # When your app is served over HTTPS (Cloudflare Tunnel), the browser
    # blocks HTTP requests to Supabase. These proxy locations forward API
    # calls to the local Supabase instance over HTTP internally.
    #
    # Usage: Set VITE_SUPABASE_URL to your HTTPS domain (e.g., https://your-app.trycloudflare.com)
    # ========================================================================

    location /auth/ {
        # Using Docker service name (requires app on supabase_network)
        proxy_pass http://supabase-kong:8000/auth/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header apikey $http_apikey;
        proxy_set_header Authorization $http_authorization;

        # Increased timeouts for Supabase API
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /rest/ {
        proxy_pass http://supabase-kong:8000/rest/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header apikey $http_apikey;
        proxy_set_header Authorization $http_authorization;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /storage/ {
        proxy_pass http://supabase-kong:8000/storage/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header apikey $http_apikey;
        proxy_set_header Authorization $http_authorization;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /functions/ {
        proxy_pass http://supabase-kong:8000/functions/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header apikey $http_apikey;
        proxy_set_header Authorization $http_authorization;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # ========================================================================
    # SPA ROUTING (Fallback to index.html)
    # ========================================================================
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # ========================================================================
    # SECURITY HEADERS
    # ========================================================================

    # Content Security Policy (CSP)
    # ⚠️ IMPORTANT: Adjust based on your environment

    # DEVELOPMENT MODE (allows HTTP local connections to Supabase)
    # Use this when accessing app locally (http://localhost or http://192.168.1.74)
    # add_header Content-Security-Policy "
    #     default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: https: http://{{SUPABASE_LOCAL_IP}}:* http://{{SUPABASE_LOCAL_HOST}}:*;
    #     connect-src 'self' http://{{SUPABASE_LOCAL_IP}}:* http://{{SUPABASE_LOCAL_HOST}}:* https:;
    #     img-src 'self' data: https: http://{{SUPABASE_LOCAL_IP}}:*;
    #     font-src 'self' data:;
    # " always;

    # PRODUCTION MODE (HTTPS only via Cloudflare Tunnel or Traefik)
    # Use this when exposing app via HTTPS tunnel
    # ⚠️ IMPORTANT: Uses 'self' and https: since Supabase API is proxied through Nginx
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval';
        style-src 'self' 'unsafe-inline';
        connect-src 'self' https:;
        img-src 'self' data: https:;
        font-src 'self' data:;
    " always;

    # Other security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # ========================================================================
    # SECURITY: Disable access to hidden files
    # ========================================================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ========================================================================
    # HEALTHCHECK ENDPOINT
    # ========================================================================
    location /healthz {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # ========================================================================
    # ERROR PAGES (optional)
    # ========================================================================
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# ============================================================================
# CONFIGURATION NOTES
# ============================================================================
#
# 1. Supabase API Proxy (NEW in v2.1.0)
#    - Proxies /auth, /rest, /storage, /functions to Supabase Kong via Docker network
#    - Uses service name: supabase-kong:8000 (internal Docker port, not 8001)
#    - Resolves Mixed Content errors when app is served over HTTPS
#    - Requires: App container on supabase_network (set in docker-compose.yml)
#    - Set VITE_SUPABASE_URL to your HTTPS domain (e.g., https://your-app.trycloudflare.com)
#
# 2. CSP (Content Security Policy)
#    - Development: Allows HTTP connections to local Supabase (commented out by default)
#    - Production: Restricts to HTTPS only + 'self' (uses proxy, no external HTTP)
#    - Replace {{SUPABASE_LOCAL_IP}} with your Pi IP (e.g., 192.168.1.74)
#    - Replace {{SUPABASE_LOCAL_HOST}} with your Pi hostname (e.g., pi5.local)
#
# 3. Cache Strategy
#    - Static assets: 30 days with must-revalidate (allows Cmd+Shift+R)
#    - index.html: No cache (always fresh)
#    - NOT using "immutable" to allow updates during development
#
# 4. MIME Types
#    - Explicitly defined for .css and .js to prevent Vite/Tailwind issues
#    - Fixes "MIME type mismatch" errors
#
# 5. Gzip Compression
#    - Enabled for text/css, application/javascript, etc.
#    - Reduces bandwidth usage by 70-80%
#
# 6. SPA Routing
#    - All 404s fall back to /index.html (React Router, Vue Router, etc.)
#
# ============================================================================
# TROUBLESHOOTING
# ============================================================================
#
# Mixed Content Error (HTTPS → HTTP blocked)
# ❌ Error: "The page at 'https://...' was loaded over HTTPS, but requested an
#           insecure resource 'http://192.168.1.74:8001/auth/v1/token'"
# ✅ Solution:
#    1. Update nginx.conf with Supabase proxy locations (already in v2.1.0)
#    2. Change VITE_SUPABASE_URL from http://192.168.1.74:8001 to https://your-domain
#    3. Rebuild container: docker compose down && docker compose up -d --build
#
# CSS not applied / Only 5kB CSS file
# ✅ Solution: Ensure tailwind.config.ts and postcss.config.js are copied
#              before Docker build (see CHANGELOG-AND-FIXES.md)
#
# "Refused to connect" CSP errors
# ✅ Solution:
#    - For local dev: Use DEVELOPMENT CSP block with correct Supabase IP
#    - For HTTPS tunnel: Use PRODUCTION CSP block (default in v2.1.0)
#
# Cache too aggressive / Updates not visible
# ✅ Solution: Hard refresh (Cmd+Shift+R) or use no-cache for static assets
#
# Authentication blocked by CSP
# ✅ Solution:
#    - With proxy: Use PRODUCTION CSP (connect-src 'self' https:)
#    - Without proxy: Add connect-src with Supabase URLs
#
# ============================================================================
