version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}
    restart: unless-stopped

    environment:
      - NODE_ENV=production
      - PORT=3000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      # Add custom env vars here

    networks:
      - traefik-network

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.${APP_NAME}-http.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.${APP_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${APP_NAME}-http.middlewares=redirect-to-https@file"
      - "traefik.http.routers.${APP_NAME}-https.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.${APP_NAME}-https.entrypoints=websecure"
      - "traefik.http.routers.${APP_NAME}-https.tls=true"
      - "traefik.http.routers.${APP_NAME}-https.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=3000"

    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 64M

networks:
  traefik-network:
    name: traefik-network
    external: true
