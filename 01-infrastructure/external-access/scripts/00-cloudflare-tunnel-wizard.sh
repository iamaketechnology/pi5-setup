#!/usr/bin/env bash
set -euo pipefail

#############################################################################
# Cloudflare Tunnel Wizard - Assistant de d√©cision intelligent
#
# Description: Guide l'utilisateur pour choisir entre tunnel g√©n√©rique ou par app
# Version: 1.0.0
# Author: PI5-SETUP Project
# Idempotent: ‚úÖ Oui (d√©tecte installations existantes)
#############################################################################

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
BOLD='\033[1m'
NC='\033[0m'

# Variables globales
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BASE_DIR="$(dirname "$SCRIPT_DIR")"
LOG_FILE="/var/log/cloudflare-tunnel-wizard-$(date +%Y%m%d_%H%M%S).log"
EXISTING_TUNNEL=""
TUNNEL_TYPE=""
USER_CHOICE=""

#############################################################################
# Fonctions utilitaires
#############################################################################

log() { echo -e "${CYAN}[INFO]${NC} $*" | tee -a "$LOG_FILE"; }
ok() { echo -e "${GREEN}[OK]${NC} $*" | tee -a "$LOG_FILE"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $*" | tee -a "$LOG_FILE"; }
error() { echo -e "${RED}[ERROR]${NC} $*" | tee -a "$LOG_FILE" >&2; }
title() { echo -e "${BOLD}${BLUE}$*${NC}"; }
section() { echo -e "\n${BOLD}${MAGENTA}‚ïê‚ïê‚ïê $* ‚ïê‚ïê‚ïê${NC}\n"; }

error_exit() {
    error "$1"
    exit 1
}

banner() {
    clear
    echo -e "${BLUE}"
    cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                      ‚ïë
‚ïë     ‚òÅÔ∏è  Cloudflare Tunnel Wizard - Assistant de Configuration       ‚ïë
‚ïë                                                                      ‚ïë
‚ïë     Version 1.0.0 - Pi5 Setup Project                              ‚ïë
‚ïë                                                                      ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}\n"
}

press_enter() {
    echo ""
    read -p "$(echo -e "${CYAN}Appuyez sur Entr√©e pour continuer...${NC}")"
    echo ""
}

#############################################################################
# D√©tection environnement existant (IDEMPOTENCE)
#############################################################################

detect_existing_setup() {
    section "üîç D√©tection de l'environnement existant"

    log "V√©rification 1/3 : Recherche de cloudflared..."

    # V√©rifier si cloudflared est install√©
    if command -v cloudflared &> /dev/null; then
        ok "cloudflared est d√©j√† install√© ($(cloudflared --version 2>&1 | head -1))"

        # Lister les tunnels existants
        log "V√©rification 2/3 : Recherche des tunnels existants..."
        local tunnels=$(sudo cloudflared tunnel list 2>/dev/null || echo "")

        if [[ -n "$tunnels" ]]; then
            echo ""
            warn "Tunnels Cloudflare d√©tect√©s :"
            echo "$tunnels"
            EXISTING_TUNNEL="yes"
        else
            ok "Aucun tunnel existant trouv√©"
            EXISTING_TUNNEL="no"
        fi
    else
        ok "cloudflared n'est pas install√© (installation sera propos√©e)"
        EXISTING_TUNNEL="no"
    fi

    # V√©rifier containers Docker cloudflared
    log "V√©rification 3/3 : Recherche des containers Docker..."
    local cf_containers=$(docker ps -a --filter "name=cloudflared" --format "{{.Names}}" 2>/dev/null || echo "")

    if [[ -n "$cf_containers" ]]; then
        echo ""
        warn "Containers cloudflared d√©tect√©s :"
        echo "$cf_containers" | sed 's/^/  - /'
    else
        ok "Aucun container cloudflared trouv√©"
    fi

    # V√©rifier configurations existantes (silencieux, juste pour info)
    local config_dirs=$(find "$BASE_DIR" -name "config.yml" -o -name "credentials.json" 2>/dev/null || echo "")

    if [[ -n "$config_dirs" ]]; then
        echo ""
        warn "Configurations d√©tect√©es :"
        echo "$config_dirs" | sed 's/^/  - /'
    fi

    echo ""
    ok "‚úÖ D√©tection termin√©e ! Aucun probl√®me trouv√©."
    echo ""
    press_enter
}

#############################################################################
# Analyse du contexte utilisateur
#############################################################################

analyze_user_context() {
    section "üìä Analyse de votre contexte"

    title "Pour vous proposer la meilleure solution, quelques questions :"
    echo ""

    # Question 1 : Nombre d'apps
    echo -e "${BOLD}1. Combien d'applications pr√©voyez-vous d'exposer via Cloudflare Tunnel ?${NC}"
    echo "   (CertiDoc + autres apps futures)"
    echo ""
    echo "   a) Seulement CertiDoc (1 app)"
    echo "   b) CertiDoc + 1-2 autres apps (2-3 apps)"
    echo "   c) CertiDoc + plusieurs apps (4+ apps)"
    echo ""
    read -p "Votre r√©ponse [a/b/c]: " nb_apps

    # Question 2 : Fr√©quence ajout apps
    echo ""
    echo -e "${BOLD}2. √Ä quelle fr√©quence ajouterez-vous de nouvelles apps ?${NC}"
    echo ""
    echo "   a) Rarement (tous les 6+ mois)"
    echo "   b) Occasionnellement (tous les 1-3 mois)"
    echo "   c) Souvent (toutes les semaines)"
    echo ""
    read -p "Votre r√©ponse [a/b/c]: " freq_apps

    # Question 3 : Criticit√© isolation
    echo ""
    echo -e "${BOLD}3. Est-il critique que vos apps soient totalement isol√©es ?${NC}"
    echo "   (Ex: si une app plante, les autres doivent rester up)"
    echo ""
    echo "   a) Non, quelques secondes d'indisponibilit√© OK"
    echo "   b) Oui, isolation critique (production sensible)"
    echo ""
    read -p "Votre r√©ponse [a/b]: " isolation

    # Question 4 : Ressources
    echo ""
    echo -e "${BOLD}4. Voulez-vous optimiser les ressources (RAM) ?${NC}"
    echo ""
    echo "   a) Oui, √©conomiser la RAM est important"
    echo "   b) Non, j'ai 16GB RAM, pas de souci"
    echo ""
    read -p "Votre r√©ponse [a/b]: " resources

    # Calculer score
    local score_generic=0
    local score_per_app=0

    # Scoring
    case "$nb_apps" in
        a) score_per_app=$((score_per_app + 2)) ;;
        b) score_generic=$((score_generic + 1)) ;;
        c) score_generic=$((score_generic + 3)) ;;
    esac

    case "$freq_apps" in
        a) score_per_app=$((score_per_app + 1)) ;;
        b) score_generic=$((score_generic + 1)) ;;
        c) score_generic=$((score_generic + 2)) ;;
    esac

    case "$isolation" in
        a) score_generic=$((score_generic + 2)) ;;
        b) score_per_app=$((score_per_app + 3)) ;;
    esac

    case "$resources" in
        a) score_generic=$((score_generic + 2)) ;;
        b) score_per_app=$((score_per_app + 1)) ;;
    esac

    echo ""
    log "Analyse termin√©e..."
    sleep 1

    # Recommandation
    if [[ $score_generic -ge $score_per_app ]]; then
        TUNNEL_TYPE="generic"
    else
        TUNNEL_TYPE="per-app"
    fi
}

#############################################################################
# Pr√©sentation d√©taill√©e Option 1 : Tunnel G√©n√©rique
#############################################################################

present_option_generic() {
    clear
    section "üì¶ OPTION 1 : Tunnel G√©n√©rique (Multi-Apps)"

    cat << 'EOF'

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                      ARCHITECTURE                                  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                    ‚îÇ
‚îÇ  Internet                                                          ‚îÇ
‚îÇ     ‚Üì                                                              ‚îÇ
‚îÇ  Cloudflare CDN                                                    ‚îÇ
‚îÇ     ‚Üì                                                              ‚îÇ
‚îÇ  Cloudflare Tunnel (1 container, ~50 MB RAM)                      ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ‚Üí certidoc.votredomaine.com ‚Üí certidoc-frontend:80         ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ‚Üí app2.votredomaine.com ‚Üí autre-app:3000                   ‚îÇ
‚îÇ     ‚îú‚îÄ‚îÄ‚Üí api.votredomaine.com ‚Üí supabase-kong:8000                ‚îÇ
‚îÇ     ‚îî‚îÄ‚îÄ‚Üí studio.votredomaine.com ‚Üí supabase-studio:3000           ‚îÇ
‚îÇ                                                                    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

EOF

    title "‚úÖ AVANTAGES"
    cat << 'EOF'

  1. üí∞ √âconomie de ressources
     ‚Ä¢ Un seul container = 50 MB RAM (vs 50 MB √ó N apps)
     ‚Ä¢ Un seul processus cloudflared

  2. üéØ Simplicit√© de gestion
     ‚Ä¢ Une seule configuration (config.yml)
     ‚Ä¢ Un seul dashboard Cloudflare
     ‚Ä¢ Commandes unifi√©es

  3. üöÄ √âvolutivit√© facile
     ‚Ä¢ Ajouter une app = 3 lignes dans config.yml
     ‚Ä¢ Script automatis√© fourni :
       $ sudo bash add-app-to-tunnel.sh mon-app mon-container 3000

  4. üîß Maintenance simplifi√©e
     ‚Ä¢ Un seul point de surveillance
     ‚Ä¢ Logs centralis√©s
     ‚Ä¢ Red√©marrage unique

  5. üåê DNS centralis√©
     ‚Ä¢ Gestion des subdomains depuis un seul tunnel
     ‚Ä¢ Wildcard DNS possible (*.votredomaine.com)

EOF

    title "‚ö†Ô∏è  INCONV√âNIENTS"
    cat << 'EOF'

  1. ‚è±Ô∏è  Point de d√©faillance unique
     ‚Ä¢ Si le tunnel red√©marre ‚Üí toutes apps offline ~5-10 secondes
     ‚Ä¢ (Rare : red√©marrage uniquement si modif config)

  2. üîó Couplage des apps
     ‚Ä¢ Modifier config d'une app = red√©marrage tunnel = impact toutes apps

  3. üìä Logs partag√©s
     ‚Ä¢ Toutes les requ√™tes dans les m√™mes logs
     ‚Ä¢ (Peut compliquer debug si beaucoup d'apps)

EOF

    title "üìä CONSOMMATION RESSOURCES"
    cat << 'EOF'

  ‚Ä¢ RAM : 50 MB (fixe, peu importe le nombre d'apps)
  ‚Ä¢ CPU : < 1% en idle, 2-5% sous charge
  ‚Ä¢ Stockage : ~30 MB (binaire + config)
  ‚Ä¢ R√©seau : Transparent (pas de surco√ªt par app)

EOF

    title "üéØ CAS D'USAGE ID√âAUX"
    cat << 'EOF'

  ‚úÖ Vous avez 3+ apps √† exposer
  ‚úÖ Vous ajoutez souvent de nouvelles apps
  ‚úÖ Quelques secondes d'indisponibilit√© OK (rare)
  ‚úÖ Vous voulez √©conomiser la RAM
  ‚úÖ Vous pr√©f√©rez la simplicit√© de gestion

EOF

    title "üíª EXEMPLE D'UTILISATION"
    cat << 'BASH'

# Installation initiale
sudo bash 01-setup-generic-tunnel.sh

# Ajouter CertiDoc
sudo bash 02-add-app-to-tunnel.sh \
  --name certidoc \
  --hostname certidoc.votredomaine.com \
  --service certidoc-frontend:80

# Ajouter une autre app
sudo bash 02-add-app-to-tunnel.sh \
  --name portfolio \
  --hostname portfolio.votredomaine.com \
  --service portfolio-app:3000

# Lister toutes les apps
sudo bash 04-list-tunnel-apps.sh

# R√©sultat :
# - certidoc.votredomaine.com ‚Üí certidoc-frontend:80
# - portfolio.votredomaine.com ‚Üí portfolio-app:3000

BASH

    echo ""
    press_enter
}

#############################################################################
# Pr√©sentation d√©taill√©e Option 2 : Tunnel par App
#############################################################################

present_option_per_app() {
    clear
    section "üîó OPTION 2 : Tunnel Par App (Isolation Maximale)"

    cat << 'EOF'

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                      ARCHITECTURE                                  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ                                                                    ‚îÇ
‚îÇ  Internet                                                          ‚îÇ
‚îÇ     ‚Üì                                                              ‚îÇ
‚îÇ  Cloudflare CDN                                                    ‚îÇ
‚îÇ     ‚Üì                                                              ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                      ‚îÇ
‚îÇ  ‚îÇ Tunnel CertiDoc (~50 MB RAM)            ‚îÇ                      ‚îÇ
‚îÇ  ‚îÇ   certidoc.votredomaine.com             ‚îÇ                      ‚îÇ
‚îÇ  ‚îÇ     ‚Üí certidoc-frontend:80              ‚îÇ                      ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                      ‚îÇ
‚îÇ                                                                    ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                      ‚îÇ
‚îÇ  ‚îÇ Tunnel App2 (~50 MB RAM)                ‚îÇ                      ‚îÇ
‚îÇ  ‚îÇ   app2.votredomaine.com                 ‚îÇ                      ‚îÇ
‚îÇ  ‚îÇ     ‚Üí app2-container:3000               ‚îÇ                      ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                      ‚îÇ
‚îÇ                                                                    ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                      ‚îÇ
‚îÇ  ‚îÇ Tunnel Supabase (~50 MB RAM)            ‚îÇ                      ‚îÇ
‚îÇ  ‚îÇ   api.votredomaine.com                  ‚îÇ                      ‚îÇ
‚îÇ  ‚îÇ     ‚Üí supabase-kong:8000                ‚îÇ                      ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                      ‚îÇ
‚îÇ                                                                    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

EOF

    title "‚úÖ AVANTAGES"
    cat << 'EOF'

  1. üõ°Ô∏è  Isolation totale
     ‚Ä¢ Une app plante ‚Üí autres apps 100% op√©rationnelles
     ‚Ä¢ Z√©ro impact inter-apps

  2. üîí S√©curit√© renforc√©e
     ‚Ä¢ Chaque tunnel = credentials s√©par√©es
     ‚Ä¢ Compromission d'un tunnel ‚â† compromission des autres

  3. üéöÔ∏è  Configuration ind√©pendante
     ‚Ä¢ Modifier config app1 = pas de red√©marrage app2
     ‚Ä¢ Chaque app a son propre config.yml

  4. üìä Monitoring granulaire
     ‚Ä¢ Logs s√©par√©s par app
     ‚Ä¢ M√©triques Cloudflare individuelles
     ‚Ä¢ Dashboard s√©par√© par tunnel

  5. üîß Flexibilit√© maximale
     ‚Ä¢ Arr√™ter/d√©marrer une app sans impacter les autres
     ‚Ä¢ Versions cloudflared diff√©rentes possibles

EOF

    title "‚ö†Ô∏è  INCONV√âNIENTS"
    cat << 'EOF'

  1. üíæ Consommation RAM
     ‚Ä¢ N apps = N √ó 50 MB RAM
     ‚Ä¢ 5 apps = 250 MB RAM vs 50 MB (option 1)

  2. üîß Complexit√© de gestion
     ‚Ä¢ N configurations √† maintenir
     ‚Ä¢ N dashboards Cloudflare √† surveiller
     ‚Ä¢ N credentials √† s√©curiser

  3. ‚è±Ô∏è  Temps de setup
     ‚Ä¢ Installation plus longue (r√©p√©ter N fois)
     ‚Ä¢ Scripts d'automatisation n√©cessaires

  4. üåê Gestion DNS multiple
     ‚Ä¢ Cr√©er N tunnels dans Cloudflare
     ‚Ä¢ Configurer N fois les routes DNS

EOF

    title "üìä CONSOMMATION RESSOURCES"
    cat << 'EOF'

  Par app :
    ‚Ä¢ RAM : 50 MB
    ‚Ä¢ CPU : < 1% en idle
    ‚Ä¢ Stockage : ~10 MB (config)

  Total (5 apps) :
    ‚Ä¢ RAM : 250 MB
    ‚Ä¢ CPU : 2-3%
    ‚Ä¢ Stockage : ~50 MB

EOF

    title "üéØ CAS D'USAGE ID√âAUX"
    cat << 'EOF'

  ‚úÖ Apps critiques (production sensible)
  ‚úÖ Besoin d'isolation totale
  ‚úÖ 16GB RAM disponibles (ressources OK)
  ‚úÖ Peu d'apps √† g√©rer (1-3 max)
  ‚úÖ S√©curit√© maximale requise

EOF

    title "üíª EXEMPLE D'UTILISATION"
    cat << 'BASH'

# Installation pour CertiDoc
sudo bash 01-setup-per-app-tunnel.sh \
  --app-name certidoc \
  --hostname certidoc.votredomaine.com \
  --service certidoc-frontend:80

# Installation pour une autre app
sudo bash 01-setup-per-app-tunnel.sh \
  --app-name portfolio \
  --hostname portfolio.votredomaine.com \
  --service portfolio-app:3000

# G√©rer individuellement
docker logs certidoc-tunnel
docker logs portfolio-tunnel

docker restart certidoc-tunnel  # portfolio non affect√©

BASH

    echo ""
    press_enter
}

#############################################################################
# Tableau comparatif
#############################################################################

show_comparison_table() {
    clear
    section "üìä Tableau Comparatif Complet"

    cat << 'EOF'

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Crit√®re                        ‚îÇ Option 1 (G√©n√©rique) ‚îÇ Option 2 (Par App)   ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ RAM (5 apps)                   ‚îÇ 50 MB                ‚îÇ 250 MB               ‚îÇ
‚îÇ Containers                     ‚îÇ 1                    ‚îÇ 5                    ‚îÇ
‚îÇ Complexit√© setup               ‚îÇ ‚≠ê Facile            ‚îÇ ‚≠ê‚≠ê‚≠ê Moyen          ‚îÇ
‚îÇ Temps installation             ‚îÇ 10 min               ‚îÇ 15 min √ó N apps      ‚îÇ
‚îÇ Maintenance                    ‚îÇ ‚≠ê Simple            ‚îÇ ‚≠ê‚≠ê‚≠ê Complexe       ‚îÇ
‚îÇ Ajouter une app                ‚îÇ 1 min                ‚îÇ 15 min               ‚îÇ
‚îÇ Isolation                      ‚îÇ ‚ùå Partag√©e          ‚îÇ ‚úÖ Totale            ‚îÇ
‚îÇ Impact red√©marrage             ‚îÇ Toutes apps          ‚îÇ 1 app seulement      ‚îÇ
‚îÇ Logs                           ‚îÇ Centralis√©s          ‚îÇ S√©par√©s              ‚îÇ
‚îÇ Dashboards Cloudflare          ‚îÇ 1                    ‚îÇ N                    ‚îÇ
‚îÇ Credentials                    ‚îÇ 1 fichier            ‚îÇ N fichiers           ‚îÇ
‚îÇ Configuration                  ‚îÇ 1 config.yml         ‚îÇ N config.yml         ‚îÇ
‚îÇ Recommand√© pour                ‚îÇ 3+ apps              ‚îÇ 1-2 apps critiques   ‚îÇ
‚îÇ √âconomie ressources            ‚îÇ ‚úÖ Oui               ‚îÇ ‚ùå Non               ‚îÇ
‚îÇ S√©curit√© maximale              ‚îÇ ‚≠ê‚≠ê Bonne           ‚îÇ ‚≠ê‚≠ê‚≠ê Excellente     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

EOF

    echo ""
    press_enter
}

#############################################################################
# Recommandation intelligente
#############################################################################

show_recommendation() {
    clear
    section "üéØ Recommandation Personnalis√©e"

    echo -e "${BOLD}Bas√© sur vos r√©ponses :${NC}\n"

    if [[ "$TUNNEL_TYPE" == "generic" ]]; then
        cat << 'EOF'
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                                                                      ‚îÇ
‚îÇ  üèÜ RECOMMANDATION : Option 1 - Tunnel G√©n√©rique                    ‚îÇ
‚îÇ                                                                      ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

Pourquoi cette recommandation ?

  ‚úÖ Vous pr√©voyez plusieurs apps
  ‚úÖ Vous ajouterez des apps r√©guli√®rement
  ‚úÖ L'isolation totale n'est pas critique
  ‚úÖ Vous souhaitez optimiser les ressources
  ‚úÖ Vous pr√©f√©rez la simplicit√© de gestion

Ce que vous obtenez :

  üì¶ Un seul container cloudflared (50 MB RAM)
  üéØ Commandes simples pour g√©rer vos apps :
     ‚Ä¢ add-app-to-tunnel.sh
     ‚Ä¢ remove-app-from-tunnel.sh
     ‚Ä¢ list-tunnel-apps.sh
  üöÄ Ajout d'apps en < 1 minute
  üí∞ √âconomie maximale de RAM

Parfait pour :
  - Homelabs avec plusieurs projets
  - Environnements de d√©veloppement
  - Petites √©quipes avec apps non-critiques

EOF
    else
        cat << 'EOF'
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                                                                      ‚îÇ
‚îÇ  üèÜ RECOMMANDATION : Option 2 - Tunnel Par App                      ‚îÇ
‚îÇ                                                                      ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

Pourquoi cette recommandation ?

  ‚úÖ Vous avez peu d'apps (1-2)
  ‚úÖ L'isolation est critique pour vous
  ‚úÖ Vous avez des ressources RAM suffisantes
  ‚úÖ Vous priorisez la s√©curit√© maximale

Ce que vous obtenez :

  üõ°Ô∏è  Isolation totale entre apps
  üîí S√©curit√© maximale (credentials s√©par√©es)
  üìä Monitoring granulaire par app
  üéöÔ∏è  Configuration ind√©pendante par app

Parfait pour :
  - Applications en production critique
  - Apps manipulant donn√©es sensibles
  - Besoin d'audit de s√©curit√©
  - Environnements avec SLA stricts

EOF
    fi

    echo ""

    # Montrer l'autre option aussi
    echo -e "${BOLD}üí° Note :${NC} Vous pouvez aussi choisir l'autre option si vous pr√©f√©rez.\n"

    press_enter
}

#############################################################################
# Menu de choix final
#############################################################################

final_choice() {
    clear
    section "üéØ Votre D√©cision Finale"

    cat << EOF

${BOLD}Quelle option voulez-vous installer ?${NC}

  ${GREEN}1)${NC} Option 1 - Tunnel G√©n√©rique (Multi-Apps)
     ${CYAN}‚Üí Recommand√© si : plusieurs apps, simplicit√©, √©conomie RAM${NC}

  ${GREEN}2)${NC} Option 2 - Tunnel Par App (Isolation)
     ${CYAN}‚Üí Recommand√© si : 1-2 apps, isolation critique, s√©curit√© max${NC}

  ${GREEN}3)${NC} Afficher √† nouveau la comparaison d√©taill√©e

  ${GREEN}4)${NC} Quitter (je d√©ciderai plus tard)

EOF

    read -p "Votre choix [1/2/3/4]: " choice

    case "$choice" in
        1)
            USER_CHOICE="generic"
            confirm_installation
            ;;
        2)
            USER_CHOICE="per-app"
            confirm_installation
            ;;
        3)
            show_comparison_table
            present_option_generic
            present_option_per_app
            final_choice
            ;;
        4)
            echo ""
            log "Installation annul√©e. Vous pouvez relancer ce script plus tard."
            echo ""
            exit 0
            ;;
        *)
            warn "Choix invalide"
            sleep 1
            final_choice
            ;;
    esac
}

#############################################################################
# Confirmation et lancement installation
#############################################################################

confirm_installation() {
    clear
    section "‚úÖ Confirmation Installation"

    if [[ "$USER_CHOICE" == "generic" ]]; then
        echo -e "${BOLD}Vous avez choisi :${NC} ${GREEN}Option 1 - Tunnel G√©n√©rique${NC}\n"

        cat << 'EOF'
Ce qui va √™tre install√© :

  üì¶ Scripts :
     ‚Ä¢ 01-setup-generic-tunnel.sh          (installation initiale)
     ‚Ä¢ 02-add-app-to-tunnel.sh             (ajouter app)
     ‚Ä¢ 03-remove-app-from-tunnel.sh        (supprimer app)
     ‚Ä¢ 04-list-tunnel-apps.sh              (lister apps)
     ‚Ä¢ 05-update-tunnel-config.sh          (reg√©n√©rer config)

  üê≥ Container Docker :
     ‚Ä¢ cloudflared-tunnel (1 container, ~50 MB RAM)

  üìÅ Configuration :
     ‚Ä¢ config/apps.json                    (base donn√©es apps)
     ‚Ä¢ config/config.yml                   (config auto-g√©n√©r√©e)
     ‚Ä¢ config/credentials.json             (credentials Cloudflare)

  ‚è±Ô∏è  Dur√©e estim√©e : 10-15 minutes

EOF
    else
        echo -e "${BOLD}Vous avez choisi :${NC} ${GREEN}Option 2 - Tunnel Par App${NC}\n"

        cat << 'EOF'
Ce qui va √™tre install√© :

  üì¶ Scripts :
     ‚Ä¢ 01-setup-per-app-tunnel.sh          (installation par app)
     ‚Ä¢ 02-manage-app-tunnel.sh             (g√©rer tunnel app)
     ‚Ä¢ 03-list-app-tunnels.sh              (lister tunnels)

  üê≥ Containers Docker :
     ‚Ä¢ 1 container par app (~50 MB RAM chacun)
     ‚Ä¢ Nomm√©s : {app-name}-tunnel

  üìÅ Configuration :
     ‚Ä¢ config/{app-name}/config.yml        (config par app)
     ‚Ä¢ config/{app-name}/credentials.json  (credentials par app)

  ‚è±Ô∏è  Dur√©e estim√©e : 15 minutes par app

EOF
    fi

    echo ""
    read -p "$(echo -e "${BOLD}Continuer avec cette installation ? [Y/n]:${NC} ")" confirm

    case "$confirm" in
        [Nn]*)
            warn "Installation annul√©e"
            final_choice
            ;;
        *)
            launch_installation
            ;;
    esac
}

#############################################################################
# Lancement installation
#############################################################################

launch_installation() {
    clear
    section "üöÄ Lancement de l'installation"

    if [[ "$USER_CHOICE" == "generic" ]]; then
        log "Installation du Tunnel G√©n√©rique..."

        # V√©rifier si script existe
        local script_path="${BASE_DIR}/cloudflare-tunnel-generic/scripts/01-setup-generic-tunnel.sh"

        if [[ -f "$script_path" ]]; then
            ok "‚úÖ Script trouv√© : $script_path"
            echo ""
            log "Lancement du script d'installation dans 3 secondes..."
            sleep 3

            bash "$script_path"

            # Apr√®s installation, afficher le r√©sum√©
            show_final_summary
        else
            warn "Script non trouv√© : $script_path"
            echo ""
            error "Les scripts d'installation n'ont pas √©t√© trouv√©s."
            echo ""
            log "Veuillez t√©l√©charger les scripts depuis GitHub :"
            echo ""
            echo "  cd /tmp"
            echo "  git clone https://github.com/iamaketechnology/pi5-setup.git"
            echo "  cd pi5-setup/01-infrastructure/external-access/cloudflare-tunnel-generic/scripts"
            echo "  sudo bash 01-setup-generic-tunnel.sh"
            echo ""
        fi
    else
        log "Installation du Tunnel Par App..."

        # Pour l'instant, utiliser le script existant option2
        warn "Option Tunnel Par App : Utilise le script existant option2-cloudflare-tunnel"
        echo ""
        log "Lancement de l'installation dans 3 secondes..."
        sleep 3

        local script_path="${BASE_DIR}/option2-cloudflare-tunnel/scripts/01-setup-cloudflare-tunnel.sh"

        if [[ -f "$script_path" ]]; then
            bash "$script_path"
        else
            warn "Script non trouv√© localement"
            echo ""
            log "T√©l√©chargement depuis GitHub..."
            echo ""
            curl -fsSL "https://raw.githubusercontent.com/iamaketechnology/pi5-setup/main/01-infrastructure/external-access/option2-cloudflare-tunnel/scripts/01-setup-cloudflare-tunnel.sh" | bash
        fi

        show_final_summary
    fi
}

#############################################################################
# R√©sum√© et documentation
#############################################################################

show_final_summary() {
    clear
    section "üìö R√©sum√© et Prochaines √âtapes"

    cat << EOF

${BOLD}‚úÖ Wizard termin√© !${NC}

${BOLD}Ce que nous avons d√©termin√© :${NC}

  ‚Ä¢ Environnement existant : ${EXISTING_TUNNEL}
  ‚Ä¢ Recommandation : Option $([ "$TUNNEL_TYPE" == "generic" ] && echo "1 (G√©n√©rique)" || echo "2 (Par App)")
  ‚Ä¢ Votre choix : Option $([ "$USER_CHOICE" == "generic" ] && echo "1 (G√©n√©rique)" || echo "2 (Par App)")

${BOLD}üìñ Documentation :${NC}

  Ce wizard a g√©n√©r√© un rapport complet :
  ${LOG_FILE}

  Pour plus d'infos, consultez :
  ‚Ä¢ ${BASE_DIR}/README.md
  ‚Ä¢ ${BASE_DIR}/docs/COMPARISON.md

${BOLD}üÜò Besoin d'aide ?${NC}

  ‚Ä¢ Relancer ce wizard : sudo bash 00-cloudflare-tunnel-wizard.sh
  ‚Ä¢ GitHub Issues : https://github.com/iamaketechnology/pi5-setup/issues
  ‚Ä¢ Documentation Cloudflare : https://developers.cloudflare.com/cloudflare-one/

EOF

    ok "Installation termin√©e avec succ√®s !"
    echo ""
}

#############################################################################
# Main
#############################################################################

main() {
    # V√©rifier root
    if [[ "$EUID" -ne 0 ]]; then
        error "Ce script doit √™tre ex√©cut√© en tant que root"
        echo "Usage: sudo $0"
        exit 1
    fi

    banner

    # Workflow du wizard
    detect_existing_setup
    analyze_user_context
    present_option_generic
    present_option_per_app
    show_comparison_table
    show_recommendation
    final_choice

    # Note: show_final_summary sera appel√© apr√®s installation
}

main "$@"
